

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 05 13:56:02 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F84A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x4E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F84A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     0081                     	;# 
    62     0085                     	;# 
    63     0086                     	;# 
    64     0088                     	;# 
    65     0089                     	;# 
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     0081                     	;# 
    78     0085                     	;# 
    79     0086                     	;# 
    80     0088                     	;# 
    81     0089                     	;# 
    82                           
    83                           	psect	idataBANK0
    84     034C                     __pidataBANK0:
    85                           
    86                           ;initializer for _dizi
    87     034C  343F               	retlw	63
    88     034D  3400               	retlw	0
    89     034E  3406               	retlw	6
    90     034F  3400               	retlw	0
    91     0350  345B               	retlw	91
    92     0351  3400               	retlw	0
    93     0352  344F               	retlw	79
    94     0353  3400               	retlw	0
    95     0354  3466               	retlw	102
    96     0355  3400               	retlw	0
    97     0356  346D               	retlw	109
    98     0357  3400               	retlw	0
    99     0358  347C               	retlw	124
   100     0359  3400               	retlw	0
   101     035A  3407               	retlw	7
   102     035B  3400               	retlw	0
   103     035C  347F               	retlw	127
   104     035D  3400               	retlw	0
   105     035E  346F               	retlw	111
   106     035F  3400               	retlw	0
   107                           
   108                           	psect	nvBANK0
   109     0024                     __pnvBANK0:
   110     0024                     _onlar:
   111     0024                     	ds	2
   112     0006                     _PORTB	set	6
   113     0029                     _RA1	set	41
   114     0028                     _RA0	set	40
   115     0085                     _TRISA	set	133
   116     0086                     _TRISB	set	134
   117                           
   118                           	psect	cinit
   119     03D2                     start_initialization:	
   120                           ; #config settings
   121                           
   122     03D2                     __initialization:
   123                           
   124                           ; Initialize objects allocated to BANK0
   125     03D2  234C               	fcall	__pidataBANK0	;fetch initializer
   126     03D3  008C               	movwf	__pdataBANK0& (0+127)
   127     03D4  234D               	fcall	__pidataBANK0+1	;fetch initializer
   128     03D5  008D               	movwf	(__pdataBANK0+1)& (0+127)
   129     03D6  234E               	fcall	__pidataBANK0+2	;fetch initializer
   130     03D7  008E               	movwf	(__pdataBANK0+2)& (0+127)
   131     03D8  234F               	fcall	__pidataBANK0+3	;fetch initializer
   132     03D9  008F               	movwf	(__pdataBANK0+3)& (0+127)
   133     03DA  2350               	fcall	__pidataBANK0+4	;fetch initializer
   134     03DB  0090               	movwf	(__pdataBANK0+4)& (0+127)
   135     03DC  2351               	fcall	__pidataBANK0+5	;fetch initializer
   136     03DD  0091               	movwf	(__pdataBANK0+5)& (0+127)
   137     03DE  2352               	fcall	__pidataBANK0+6	;fetch initializer
   138     03DF  0092               	movwf	(__pdataBANK0+6)& (0+127)
   139     03E0  2353               	fcall	__pidataBANK0+7	;fetch initializer
   140     03E1  0093               	movwf	(__pdataBANK0+7)& (0+127)
   141     03E2  2354               	fcall	__pidataBANK0+8	;fetch initializer
   142     03E3  0094               	movwf	(__pdataBANK0+8)& (0+127)
   143     03E4  2355               	fcall	__pidataBANK0+9	;fetch initializer
   144     03E5  0095               	movwf	(__pdataBANK0+9)& (0+127)
   145     03E6  2356               	fcall	__pidataBANK0+10	;fetch initializer
   146     03E7  0096               	movwf	(__pdataBANK0+10)& (0+127)
   147     03E8  2357               	fcall	__pidataBANK0+11	;fetch initializer
   148     03E9  0097               	movwf	(__pdataBANK0+11)& (0+127)
   149     03EA  2358               	fcall	__pidataBANK0+12	;fetch initializer
   150     03EB  0098               	movwf	(__pdataBANK0+12)& (0+127)
   151     03EC  2359               	fcall	__pidataBANK0+13	;fetch initializer
   152     03ED  0099               	movwf	(__pdataBANK0+13)& (0+127)
   153     03EE  235A               	fcall	__pidataBANK0+14	;fetch initializer
   154     03EF  009A               	movwf	(__pdataBANK0+14)& (0+127)
   155     03F0  235B               	fcall	__pidataBANK0+15	;fetch initializer
   156     03F1  009B               	movwf	(__pdataBANK0+15)& (0+127)
   157     03F2  235C               	fcall	__pidataBANK0+16	;fetch initializer
   158     03F3  009C               	movwf	(__pdataBANK0+16)& (0+127)
   159     03F4  235D               	fcall	__pidataBANK0+17	;fetch initializer
   160     03F5  009D               	movwf	(__pdataBANK0+17)& (0+127)
   161     03F6  235E               	fcall	__pidataBANK0+18	;fetch initializer
   162     03F7  009E               	movwf	(__pdataBANK0+18)& (0+127)
   163     03F8  235F               	fcall	__pidataBANK0+19	;fetch initializer
   164     03F9  009F               	movwf	(__pdataBANK0+19)& (0+127)
   165                           
   166                           ; Clear objects allocated to BANK0
   167     03FA  01A0               	clrf	__pbssBANK0& (0+127)
   168     03FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   169     03FC  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   170     03FD  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   171     03FE                     end_of_initialization:	
   172                           ;End of C runtime variable initialization code
   173                           
   174     03FE                     __end_of__initialization:
   175     03FE  0183               	clrf	3
   176     03FF  2B60               	ljmp	_main	;jump to C main() function
   177                           
   178                           	psect	bssBANK0
   179     0020                     __pbssBANK0:
   180     0020                     _sayi:
   181     0020                     	ds	2
   182     0022                     _birler:
   183     0022                     	ds	2
   184                           
   185                           	psect	dataBANK0
   186     000C                     __pdataBANK0:
   187     000C                     _dizi:
   188     000C                     	ds	20
   189                           
   190                           	psect	cstackBANK0
   191     0026                     __pcstackBANK0:
   192     0026                     ?_main:
   193     0026                     ??_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 1 bytes @ 0x0
   198     0026                     	ds	2
   199                           
   200                           	psect	maintext
   201     0360                     __pmaintext:	
   202 ;;
   203 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   204 ;;
   205 ;; *************** function _main *****************
   206 ;; Defined at:
   207 ;;		line 13 in file "Display_Project_2.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;		None
   212 ;; Return value:  Size  Location     Type
   213 ;;                  1    wreg      void 
   214 ;; Registers used:
   215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   216 ;; Tracked objects:
   217 ;;		On entry : B00/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMMON   BANK0
   221 ;;      Params:         0       0
   222 ;;      Locals:         0       0
   223 ;;      Temps:          0       2
   224 ;;      Totals:         0       2
   225 ;;Total ram usage:        2 bytes
   226 ;; This function calls:
   227 ;;		Nothing
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233     0360                     _main:	
   234                           ;psect for function _main
   235                           
   236     0360                     l664:	
   237                           ;incstack = 0
   238                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   239                           
   240                           
   241                           ;Display_Project_2.c: 14:                     RA0=0;RA1=1;
   242     0360  1683               	bsf	3,5	;RP0=1, select bank1
   243     0361  0186               	clrf	6	;volatile
   244                           
   245                           ;Display_Project_2.c: 15:                     PORTB=dizi[birler];
   246     0362  0185               	clrf	5	;volatile
   247     0363                     l25:	
   248                           ;Display_Project_2.c: 18:                     RA0=1;RA1=0;
   249                           
   250                           
   251                           ;Display_Project_2.c: 20:                     _delay((unsigned long)((10)*(4000000/4000.
      +                          0)));
   252     0363  1283               	bcf	3,5	;RP0=0, select bank0
   253     0364  01A4               	clrf	_onlar
   254     0365  01A5               	clrf	_onlar+1
   255     0366                     l670:
   256                           
   257                           ;Display_Project_2.c: 21:                 }
   258     0366  1283               	bcf	3,5	;RP0=0, select bank0
   259     0367  01A2               	clrf	_birler
   260     0368  01A3               	clrf	_birler+1
   261     0369                     l676:
   262                           
   263                           ;Display_Project_2.c: 22:             }
   264     0369  1283               	bcf	3,5	;RP0=0, select bank0
   265     036A  01A0               	clrf	_sayi
   266     036B  01A1               	clrf	_sayi+1
   267     036C                     l30:
   268                           
   269                           ;Display_Project_2.c: 23:         }
   270     036C  1283               	bcf	3,5	;RP0=0, select bank0
   271     036D  1005               	bcf	5,0	;volatile
   272     036E  1485               	bsf	5,1	;volatile
   273     036F                     l682:
   274                           
   275                           ;Display_Project_2.c: 24: 
   276     036F  0822               	movf	_birler,w
   277     0370  00A6               	movwf	??_main
   278     0371  0726               	addwf	??_main,w
   279     0372  3E0C               	addlw	(low (_dizi| 0))& (0+255)
   280     0373  0084               	movwf	4
   281     0374  1383               	bcf	3,7	;select IRP bank0
   282     0375  0800               	movf	0,w
   283     0376  0086               	movwf	6	;volatile
   284     0377                     l684:
   285                           
   286                           ;Display_Project_2.c: 25: 
   287     0377  300D               	movlw	13
   288     0378  00A7               	movwf	??_main+1
   289     0379  30FB               	movlw	251
   290     037A  00A6               	movwf	??_main
   291     037B                     u77:
   292     037B  0BA6               	decfsz	??_main,f
   293     037C  2B7B               	goto	u77
   294     037D  0BA7               	decfsz	??_main+1,f
   295     037E  2B7B               	goto	u77
   296     037F  2B80               	nop2
   297     0380                     l686:
   298                           
   299                           ;Display_Project_2.c: 27: }
   300     0380  1283               	bcf	3,5	;RP0=0, select bank0
   301     0381  1405               	bsf	5,0	;volatile
   302     0382                     l688:
   303     0382  1085               	bcf	5,1	;volatile
   304     0383                     l690:
   305     0383  0824               	movf	_onlar,w
   306     0384  00A6               	movwf	??_main
   307     0385  0726               	addwf	??_main,w
   308     0386  3E0C               	addlw	(low (_dizi| 0))& (0+255)
   309     0387  0084               	movwf	4
   310     0388  1383               	bcf	3,7	;select IRP bank0
   311     0389  0800               	movf	0,w
   312     038A  0086               	movwf	6	;volatile
   313     038B  300D               	movlw	13
   314     038C  00A7               	movwf	??_main+1
   315     038D  30FB               	movlw	251
   316     038E  00A6               	movwf	??_main
   317     038F                     u87:
   318     038F  0BA6               	decfsz	??_main,f
   319     0390  2B8F               	goto	u87
   320     0391  0BA7               	decfsz	??_main+1,f
   321     0392  2B8F               	goto	u87
   322     0393  2B94               	nop2
   323     0394  3001               	movlw	1
   324     0395  1283               	bcf	3,5	;RP0=0, select bank0
   325     0396  07A0               	addwf	_sayi,f
   326     0397  1803               	skipnc
   327     0398  0AA1               	incf	_sayi+1,f
   328     0399  3000               	movlw	0
   329     039A  07A1               	addwf	_sayi+1,f
   330     039B                     l692:
   331     039B  0821               	movf	_sayi+1,w
   332     039C  3A80               	xorlw	128
   333     039D  00CF               	movwf	btemp+1
   334     039E  3080               	movlw	128
   335     039F  024F               	subwf	btemp+1,w
   336     03A0  1D03               	skipz
   337     03A1  2BA4               	goto	u45
   338     03A2  3005               	movlw	5
   339     03A3  0220               	subwf	_sayi,w
   340     03A4                     u45:
   341     03A4  1C03               	skipc
   342     03A5  2BA7               	goto	u41
   343     03A6  2BA8               	goto	u40
   344     03A7                     u41:
   345     03A7  2B6C               	goto	l30
   346     03A8                     u40:
   347     03A8                     l694:
   348     03A8  3001               	movlw	1
   349     03A9  1283               	bcf	3,5	;RP0=0, select bank0
   350     03AA  07A2               	addwf	_birler,f
   351     03AB  1803               	skipnc
   352     03AC  0AA3               	incf	_birler+1,f
   353     03AD  3000               	movlw	0
   354     03AE  07A3               	addwf	_birler+1,f
   355     03AF                     l696:
   356     03AF  0823               	movf	_birler+1,w
   357     03B0  3A80               	xorlw	128
   358     03B1  00CF               	movwf	btemp+1
   359     03B2  3080               	movlw	128
   360     03B3  024F               	subwf	btemp+1,w
   361     03B4  1D03               	skipz
   362     03B5  2BB8               	goto	u55
   363     03B6  300A               	movlw	10
   364     03B7  0222               	subwf	_birler,w
   365     03B8                     u55:
   366     03B8  1C03               	skipc
   367     03B9  2BBB               	goto	u51
   368     03BA  2BBC               	goto	u50
   369     03BB                     u51:
   370     03BB  2B69               	goto	l676
   371     03BC                     u50:
   372     03BC                     l698:
   373     03BC  3001               	movlw	1
   374     03BD  1283               	bcf	3,5	;RP0=0, select bank0
   375     03BE  07A4               	addwf	_onlar,f
   376     03BF  1803               	skipnc
   377     03C0  0AA5               	incf	_onlar+1,f
   378     03C1  3000               	movlw	0
   379     03C2  07A5               	addwf	_onlar+1,f
   380     03C3                     l700:
   381     03C3  0825               	movf	_onlar+1,w
   382     03C4  3A80               	xorlw	128
   383     03C5  00CF               	movwf	btemp+1
   384     03C6  3080               	movlw	128
   385     03C7  024F               	subwf	btemp+1,w
   386     03C8  1D03               	skipz
   387     03C9  2BCC               	goto	u65
   388     03CA  300A               	movlw	10
   389     03CB  0224               	subwf	_onlar,w
   390     03CC                     u65:
   391     03CC  1C03               	skipc
   392     03CD  2BCF               	goto	u61
   393     03CE  2BD0               	goto	u60
   394     03CF                     u61:
   395     03CF  2B66               	goto	l670
   396     03D0                     u60:
   397     03D0  2B63               	goto	l25
   398     03D1  2800               	ljmp	start
   399     03D2                     __end_of_main:
   400     004E                     btemp	set	78	;btemp
   401     004E                     wtemp0	set	78
   402                           
   403                           	psect	idloc
   404                           
   405                           ;Config register IDLOC0 @ 0x2000
   406                           ;	unspecified, using default values
   407     2000                     	org	8192
   408     2000  3FFF               	dw	16383
   409                           
   410                           ;Config register IDLOC1 @ 0x2001
   411                           ;	unspecified, using default values
   412     2001                     	org	8193
   413     2001  3FFF               	dw	16383
   414                           
   415                           ;Config register IDLOC2 @ 0x2002
   416                           ;	unspecified, using default values
   417     2002                     	org	8194
   418     2002  3FFF               	dw	16383
   419                           
   420                           ;Config register IDLOC3 @ 0x2003
   421                           ;	unspecified, using default values
   422     2003                     	org	8195
   423     2003  3FFF               	dw	16383
   424                           
   425                           	psect	config
   426                           
   427                           ;Config register CONFIG @ 0x2007
   428                           ;	Oscillator Selection bits
   429                           ;	FOSC = EXTRC, RC oscillator
   430                           ;	Watchdog Timer
   431                           ;	WDTE = OFF, WDT disabled
   432                           ;	Power-up Timer Enable bit
   433                           ;	PWRTE = OFF, Power-up Timer is disabled
   434                           ;	Code Protection bit
   435                           ;	CP = OFF, Code protection disabled
   436     2007                     	org	8199
   437     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      2      28

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      2      1C       3       42.4%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C       6        0.0%
ABS                  0      0      1C       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 05 13:56:02 2023

                     l30 036C                       l25 0363                       u40 03A8  
                     u41 03A7                       u50 03BC                       u51 03BB  
                     u60 03D0                       u61 03CF                       u45 03A4  
                     u55 03B8                       u65 03CC                       u77 037B  
                     u87 038F                      l700 03C3                      l670 0366  
                    l664 0360                      l690 0383                      l682 036F  
                    l692 039B                      l684 0377                      l676 0369  
                    l694 03A8                      l686 0380                      l696 03AF  
                    l688 0382                      l698 03BC                      _RA0 0028  
                    _RA1 0029                      fsr0 0004                      indf 0000  
                   _dizi 000C                     _main 0360                     _sayi 0020  
                   btemp 004E                     start 0000                    ?_main 0026  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _onlar 0024                    status 0003                    wtemp0 004E  
        __initialization 03D2             __end_of_main 03D2                   ??_main 0026  
                 _birler 0022  __end_of__initialization 03FE             __pidataBANK0 034C  
             __pbssBANK0 0020               __pmaintext 0360     end_of_initialization 03FE  
    start_initialization 03D2              __pdataBANK0 000C                ___latbits 0000  
          __pcstackBANK0 0026                __pnvBANK0 0024  
