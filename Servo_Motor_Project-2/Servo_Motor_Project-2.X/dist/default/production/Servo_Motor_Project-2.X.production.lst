

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 10 00:47:15 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	idataCOMMON
   169     00A4                     __pidataCOMMON:
   170                           
   171                           ;initializer for _adim
   172     00A4  3403               	retlw	3
   173     00A5  3400               	retlw	0
   174     0001                     _TMR0	set	1
   175     005D                     _T0IE	set	93
   176     005F                     _GIE	set	95
   177     0030                     _RB0	set	48
   178     005A                     _T0IF	set	90
   179     0081                     _OPTION_REG	set	129
   180     0086                     _TRISB	set	134
   181                           
   182                           	psect	cinit
   183     0011                     start_initialization:	
   184                           ; #config settings
   185                           
   186     0011                     __initialization:
   187                           
   188                           ; Initialize objects allocated to COMMON
   189     0011  120A  118A  20A4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   190     0016  00F8               	movwf	__pdataCOMMON& (0+127)
   191     0017  120A  118A  20A5  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   192     001C  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   193                           
   194                           ; Clear objects allocated to COMMON
   195     001D  01F0               	clrf	__pbssCOMMON& (0+127)
   196     001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   197     001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   198     0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   199     0021                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202     0021                     __end_of__initialization:
   203     0021  0183               	clrf	3
   204     0022  120A  118A  2895   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMMON
   207     0070                     __pbssCOMMON:
   208     0070                     _gecikme:
   209     0070                     	ds	2
   210     0072                     _sayac:
   211     0072                     	ds	2
   212                           
   213                           	psect	dataCOMMON
   214     0078                     __pdataCOMMON:
   215     0078                     _adim:
   216     0078                     	ds	2
   217                           
   218                           	psect	cstackCOMMON
   219     0074                     __pcstackCOMMON:
   220     0074                     ?_KESME:
   221     0074                     ??_KESME:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0074                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229     0074                     	ds	4
   230     0078                     ??_main:
   231                           
   232                           	psect	maintext
   233     0095                     __pmaintext:	
   234                           ; 1 bytes @ 0x4
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 51 in file "Servo_Motor_Project-2.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called: 1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267     0095                     _main:	
   268                           ;psect for function _main
   269                           
   270     0095                     l658:	
   271                           ;incstack = 0
   272                           ; Regs used in _main: [wreg+status,2]
   273                           
   274     0095  178B               	bsf	11,7	;volatile
   275     0096  168B               	bsf	11,5	;volatile
   276     0097                     l660:
   277     0097  1683               	bsf	3,5	;RP0=1, select bank1
   278     0098  1303               	bcf	3,6	;RP1=0, select bank1
   279     0099  0186               	clrf	6	;volatile
   280     009A                     l662:
   281     009A  3002               	movlw	2
   282     009B  0081               	movwf	1	;volatile
   283     009C                     l664:
   284     009C  30E7               	movlw	231
   285     009D  1283               	bcf	3,5	;RP0=0, select bank0
   286     009E  1303               	bcf	3,6	;RP1=0, select bank0
   287     009F  0081               	movwf	1	;volatile
   288     00A0                     l37:
   289     00A0                     l38:
   290     00A0  28A0               	goto	l37
   291     00A1  120A  118A  280E   	ljmp	start
   292     00A4                     __end_of_main:
   293                           
   294                           	psect	text1
   295     0025                     __ptext1:	
   296 ;; *************** function _KESME *****************
   297 ;; Defined at:
   298 ;;		line 21 in file "Servo_Motor_Project-2.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0, btemp+1
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          4       0       0       0       0
   315 ;;      Totals:         4       0       0       0       0
   316 ;;Total ram usage:        4 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		Interrupt level 1
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     0025                     _KESME:	
   326                           ;psect for function _KESME
   327                           
   328     0025                     i1l632:
   329                           
   330                           ;Servo_Motor_Project-2.c: 22:       }
   331     0025  1D0B               	btfss	11,2	;volatile
   332     0026  2828               	goto	u1_21
   333     0027  2829               	goto	u1_20
   334     0028                     u1_21:
   335     0028  2887               	goto	i1l654
   336     0029                     u1_20:
   337     0029                     i1l634:
   338                           
   339                           ;Servo_Motor_Project-2.c: 23: 
   340     0029  3001               	movlw	1
   341     002A  07F0               	addwf	_gecikme,f
   342     002B  1803               	skipnc
   343     002C  0AF1               	incf	_gecikme+1,f
   344     002D  3000               	movlw	0
   345     002E  07F1               	addwf	_gecikme+1,f
   346     002F                     i1l636:
   347                           
   348                           ;Servo_Motor_Project-2.c: 24: 
   349     002F  0871               	movf	_gecikme+1,w
   350     0030  3A80               	xorlw	128
   351     0031  00FF               	movwf	btemp+1
   352     0032  3093               	movlw	147
   353     0033  027F               	subwf	btemp+1,w
   354     0034  1D03               	skipz
   355     0035  2838               	goto	u2_25
   356     0036  3089               	movlw	137
   357     0037  0270               	subwf	_gecikme,w
   358     0038                     u2_25:
   359     0038  1C03               	skipc
   360     0039  283B               	goto	u2_21
   361     003A  283C               	goto	u2_20
   362     003B                     u2_21:
   363     003B  2855               	goto	i1l26
   364     003C                     u2_20:
   365     003C                     i1l638:
   366                           
   367                           ;Servo_Motor_Project-2.c: 25:     if (sayac==100){
   368     003C  01F0               	clrf	_gecikme
   369     003D  01F1               	clrf	_gecikme+1
   370     003E                     i1l640:
   371                           
   372                           ;Servo_Motor_Project-2.c: 26:         sayac=0;
   373     003E  0879               	movf	_adim+1,w
   374     003F  3A80               	xorlw	128
   375     0040  00FF               	movwf	btemp+1
   376     0041  3080               	movlw	128
   377     0042  027F               	subwf	btemp+1,w
   378     0043  1D03               	skipz
   379     0044  2847               	goto	u3_25
   380     0045  3009               	movlw	9
   381     0046  0278               	subwf	_adim,w
   382     0047                     u3_25:
   383     0047  1C03               	skipc
   384     0048  284A               	goto	u3_21
   385     0049  284B               	goto	u3_20
   386     004A                     u3_21:
   387     004A  284F               	goto	i1l27
   388     004B                     u3_20:
   389     004B                     i1l642:
   390                           
   391                           ;Servo_Motor_Project-2.c: 27:     }
   392     004B  3002               	movlw	2
   393     004C  00F8               	movwf	_adim
   394     004D  3000               	movlw	0
   395     004E  00F9               	movwf	_adim+1
   396     004F                     i1l27:
   397                           
   398                           ;Servo_Motor_Project-2.c: 28: 
   399     004F  3001               	movlw	1
   400     0050  07F8               	addwf	_adim,f
   401     0051  1803               	skipnc
   402     0052  0AF9               	incf	_adim+1,f
   403     0053  3000               	movlw	0
   404     0054  07F9               	addwf	_adim+1,f
   405     0055                     i1l26:	
   406                           ;Servo_Motor_Project-2.c: 29: 
   407                           
   408                           
   409                           ;Servo_Motor_Project-2.c: 30: 
   410     0055  3001               	movlw	1
   411     0056  07F2               	addwf	_sayac,f
   412     0057  1803               	skipnc
   413     0058  0AF3               	incf	_sayac+1,f
   414     0059  3000               	movlw	0
   415     005A  07F3               	addwf	_sayac+1,f
   416                           
   417                           ;Servo_Motor_Project-2.c: 31: 
   418     005B  0879               	movf	_adim+1,w
   419     005C  3A80               	xorlw	128
   420     005D  00F4               	movwf	??_KESME
   421     005E  0873               	movf	_sayac+1,w
   422     005F  3A80               	xorlw	128
   423     0060  0274               	subwf	??_KESME,w
   424     0061  1D03               	skipz
   425     0062  2865               	goto	u4_25
   426     0063  0872               	movf	_sayac,w
   427     0064  0278               	subwf	_adim,w
   428     0065                     u4_25:
   429     0065  1C03               	skipc
   430     0066  2868               	goto	u4_21
   431     0067  2869               	goto	u4_20
   432     0068                     u4_21:
   433     0068  286D               	goto	i1l646
   434     0069                     u4_20:
   435     0069                     i1l644:
   436                           
   437                           ;Servo_Motor_Project-2.c: 32: }
   438     0069  1283               	bcf	3,5	;RP0=0, select bank0
   439     006A  1303               	bcf	3,6	;RP1=0, select bank0
   440     006B  1406               	bsf	6,0	;volatile
   441     006C  287E               	goto	i1l650
   442     006D                     i1l646:
   443     006D  0879               	movf	_adim+1,w
   444     006E  3A80               	xorlw	128
   445     006F  00F4               	movwf	??_KESME
   446     0070  0873               	movf	_sayac+1,w
   447     0071  3A80               	xorlw	128
   448     0072  0274               	subwf	??_KESME,w
   449     0073  1D03               	skipz
   450     0074  2877               	goto	u5_25
   451     0075  0872               	movf	_sayac,w
   452     0076  0278               	subwf	_adim,w
   453     0077                     u5_25:
   454     0077  1803               	skipnc
   455     0078  287A               	goto	u5_21
   456     0079  287B               	goto	u5_20
   457     007A                     u5_21:
   458     007A  287E               	goto	i1l650
   459     007B                     u5_20:
   460     007B                     i1l648:
   461                           
   462                           ;Servo_Motor_Project-2.c: 34: T0IF=0;
   463     007B  1283               	bcf	3,5	;RP0=0, select bank0
   464     007C  1303               	bcf	3,6	;RP1=0, select bank0
   465     007D  1006               	bcf	6,0	;volatile
   466     007E                     i1l650:
   467                           
   468                           ;Servo_Motor_Project-2.c: 38: void main(void) {
   469     007E  3064               	movlw	100
   470     007F  0672               	xorwf	_sayac,w
   471     0080  0473               	iorwf	_sayac+1,w
   472     0081  1D03               	btfss	3,2
   473     0082  2884               	goto	u6_21
   474     0083  2885               	goto	u6_20
   475     0084                     u6_21:
   476     0084  2887               	goto	i1l654
   477     0085                     u6_20:
   478     0085                     i1l652:
   479                           
   480                           ;Servo_Motor_Project-2.c: 39:     GIE=1;
   481     0085  01F2               	clrf	_sayac
   482     0086  01F3               	clrf	_sayac+1
   483     0087                     i1l654:
   484                           
   485                           ;Servo_Motor_Project-2.c: 46: 
   486     0087  30E7               	movlw	231
   487     0088  1283               	bcf	3,5	;RP0=0, select bank0
   488     0089  1303               	bcf	3,6	;RP1=0, select bank0
   489     008A  0081               	movwf	1	;volatile
   490     008B                     i1l656:
   491                           
   492                           ;Servo_Motor_Project-2.c: 47:     while(1){}
   493     008B  110B               	bcf	11,2	;volatile
   494     008C                     i1l32:
   495     008C  0877               	movf	??_KESME+3,w
   496     008D  00FF               	movwf	btemp+1
   497     008E  0876               	movf	??_KESME+2,w
   498     008F  008A               	movwf	10
   499     0090  0E75               	swapf	??_KESME+1,w
   500     0091  0083               	movwf	3
   501     0092  0EFE               	swapf	btemp,f
   502     0093  0E7E               	swapf	btemp,w
   503     0094  0009               	retfie
   504     0095                     __end_of_KESME:
   505     007E                     btemp	set	126	;btemp
   506     007E                     wtemp0	set	126
   507                           
   508                           	psect	intentry
   509     0004                     __pintentry:	
   510                           ;incstack = 0
   511                           ; Regs used in _KESME: [wreg+status,2+status,0+btemp+1]
   512                           
   513     0004                     interrupt_function:
   514     007E                     saved_w	set	btemp
   515     0004  00FE               	movwf	btemp
   516     0005  0E03               	swapf	3,w
   517     0006  00F5               	movwf	??_KESME+1
   518     0007  080A               	movf	10,w
   519     0008  00F6               	movwf	??_KESME+2
   520     0009  087F               	movf	btemp+1,w
   521     000A  00F7               	movwf	??_KESME+3
   522     000B  120A  118A  2825   	ljmp	_KESME
   523                           
   524                           	psect	idloc
   525                           
   526                           ;Config register IDLOC0 @ 0x2000
   527                           ;	unspecified, using default values
   528     2000                     	org	8192
   529     2000  3FFF               	dw	16383
   530                           
   531                           ;Config register IDLOC1 @ 0x2001
   532                           ;	unspecified, using default values
   533     2001                     	org	8193
   534     2001  3FFF               	dw	16383
   535                           
   536                           ;Config register IDLOC2 @ 0x2002
   537                           ;	unspecified, using default values
   538     2002                     	org	8194
   539     2002  3FFF               	dw	16383
   540                           
   541                           ;Config register IDLOC3 @ 0x2003
   542                           ;	unspecified, using default values
   543     2003                     	org	8195
   544     2003  3FFF               	dw	16383
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = XT, XT oscillator
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = OFF, PWRT disabled
   555                           ;	FLASH Program Memory Code Protection bits
   556                           ;	CP = OFF, Code protection off
   557                           ;	Brown-out Reset Enable bit
   558                           ;	BOREN = ON, BOR enabled
   559                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   560                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   561                           ;	Data EE Memory Code Protection
   562                           ;	CPD = OFF, Code Protection off
   563                           ;	FLASH Program Memory Write Enable
   564                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   565                           ;	In-Circuit Debugger Mode bit
   566                           ;	DEBUG = 0x1, unprogrammed default
   567     2007                     	org	8199
   568     2007  3DF9               	dw	15865

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _KESME in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _KESME in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _KESME in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _KESME in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _KESME in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _KESME                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _KESME (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 10 00:47:15 2023

                     l37 00A0                       l38 00A0                      l660 0097  
                    l662 009A                      l664 009C                      l658 0095  
                    _GIE 005F                      _RB0 0030                     _T0IE 005D  
                   _T0IF 005A                     i1l32 008C                     i1l26 0055  
                   i1l27 004F                     _TMR0 0001                     u1_20 0029  
                   u1_21 0028                     u2_20 003C                     u2_21 003B  
                   u2_25 0038                     u3_20 004B                     u3_21 004A  
                   u3_25 0047                     u4_20 0069                     u4_21 0068  
                   u4_25 0065                     u5_20 007B                     u5_21 007A  
                   u5_25 0077                     u6_20 0085                     u6_21 0084  
                   _adim 0078                     _main 0095                     btemp 007E  
                   start 000E                    ?_main 0074                    _KESME 0025  
                  i1l640 003E                    i1l632 0025                    i1l650 007E  
                  i1l642 004B                    i1l634 0029                    i1l652 0085  
                  i1l644 0069                    i1l636 002F                    i1l646 006D  
                  i1l638 003C                    i1l654 0087                    i1l656 008B  
                  i1l648 007B                    _TRISB 0086                    _sayac 0072  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00A4                   ??_main 0078  
                 ?_KESME 0074             __pdataCOMMON 0078                   saved_w 007E  
__end_of__initialization 0021            __end_of_KESME 0095           __pcstackCOMMON 0074  
                ??_KESME 0074               __pmaintext 0095               __pintentry 0004  
                _gecikme 0070                  __ptext1 0025     end_of_initialization 0021  
          __pidataCOMMON 00A4      start_initialization 0011              __pbssCOMMON 0070  
              ___latbits 0002        interrupt_function 0004                 intlevel1 0000  
             _OPTION_REG 0081  
